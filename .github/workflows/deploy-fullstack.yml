name: Deploy Fullstack

on:
  push:
    branches: [main, dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      HEALTHCHECK_BACKEND: "http://${{ secrets.SERVER_HOST }}:8000/"
      HEALTHCHECK_FRONTEND: "http://${{ secrets.SERVER_HOST }}/"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./frontend/genstroyai_frontend

      - name: Build frontend
        run: pnpm run build
        working-directory: ./frontend/genstroyai_frontend

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Ensure project path exists
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "sudo mkdir -p ${{ secrets.SERVER_PROJECT_PATH }}/backend ${{ secrets.SERVER_PROJECT_PATH }}/frontend_dist && sudo chown -R $USER:$USER ${{ secrets.SERVER_PROJECT_PATH }}"

      - name: Rsync backend code to server
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./backend/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PROJECT_PATH }}/backend/

      - name: Rsync docker-compose.yml to server
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PROJECT_PATH }}/

      - name: Rsync frontend dist to server
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./frontend/genstroyai_frontend/dist/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PROJECT_PATH }}/frontend_dist/

      - name: Deploy on server (with backup)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            cd ${{ secrets.SERVER_PROJECT_PATH }} &&
            docker compose config > docker-compose.last-success.yaml || true &&
            docker compose build &&
            docker compose up -d --remove-orphans
          "

      - name: Healthcheck Backend
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "curl -fsSL --max-time 10 $HEALTHCHECK_BACKEND"

      - name: Healthcheck Frontend
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "curl -fsSL --max-time 10 $HEALTHCHECK_FRONTEND"

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Healthcheck failed, rolling back..."
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
            cd ${{ secrets.SERVER_PROJECT_PATH }} &&
            if [ -f docker-compose.last-success.yaml ]; then
              docker compose -f docker-compose.last-success.yaml up -d --remove-orphans
            else
              echo 'No backup found, cannot rollback.'
              exit 1
            fi
          " 